    // Envoyer formulaire au local storage SI les données sont valides
    //if (firstNameControl() && lastNameControl() && addressControl() && cityControl() && emailControl()) {
       // localStorage.setItem("contact", JSON.stringify(contact));
        //Récupération des Id nounours pour l'envoi au serveur
        saveProductLocalStorage.forEach((dataId) => {
            products.push(dataId.id);
            console.log(dataId.id)
        });
        const sendAll = {
            contact,
            products
        }
        console.log("av: "+sendAll)
        sendPost("http://localhost:3000/api/teddies/order",sendAll)
        .then((res)=> {
            console.log(res)
        })
        .catch((e)=>{
            console.log(e)
        })
       // postfetch(sendAll);
    //}
});
    
// Envoyer la commande et le formulaire au serveur
function postfetch(dataPanier) {
    fetch("http://localhost:3000/api/teddies/order", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(dataPanier),
    })
    .then((data) => {
        console.log(data)
    })
    .then((dataResponse) => {
        localStorage.setItem("order_id", JSON.stringify(dataResponse.orderId)
        );
        //window.location.replace("confirmation.html");
        console.log(dataResponse)
    })
    .catch((error) => console.log(error))
}

/*function sendPost(url, toSend){
    return new Promise((resolve, reject) => {
        let recovHttp= new XMLHttpRequest();
        recovHttp.open("POST", url);
        recovHttp.setRequestHeader("content-type", "application/json");
        recovHttp.send(JSON.stringify(toSend));
        recovHttp.onload = function() {
            if(this.readyState === XMLHttpRequest.DONE) {
                if(this.status >= 200 && this.status <= 300) {  
                    resolve(JSON.parse(this.responseText));
                } else {
                    reject("encore une erreur");
                }
            }
         
        }
    });
}*/